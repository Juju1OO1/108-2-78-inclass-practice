pickcongrats <- ntpu_eco%in%nameseco
congrats
students10[['sum']] <- students10[['英文']]+students10[['數學']]
pick1 <- students10[['國文']][pick_students]>=12
pick2 <- students10[['sum']][pick_students]>=26
ntpu_eco <- ntpu_namelist[pick1&pick2]
ntpu_eco
picknames1 <- students10[["志願"]]=="北大經濟"
#nameseco <- students10[["姓名"]]
#pickcongrats <- ntpu_eco%in%nameseco
congrats
picknames1 <- students10[["志願"]]=="北大經濟"
#nameseco <- students10[["姓名"]]
#pickcongrats <- ntpu_eco%in%nameseco
#congrats
picknames1 <- students10[["志願"]]=="北大經濟"
nameseco <- students10[["姓名"]][picknames1]
pickcongrats <- ntpu_eco%in%nameseco
#congrats
picknames1 <- students10[["志願"]]=="北大經濟"
nameseco <- students10[["姓名"]][picknames1]
pickcongrats <- ntpu_eco%in%nameseco
congrats <- nameseco[pickcongrats]
#congrats
picknames1 <- students10[["志願"]]=="北大經濟"
nameseco <- students10[["姓名"]][picknames1]
pickcongrats <- ntpu_eco%in%nameseco
congrats <- nameseco[pickcongrats]
str(congrats)
#congrats
picknames1 <- students10[["志願"]]=="北大經濟"
nameseco <- students10[["姓名"]][picknames1]
pickcongrats <- ntpu_eco%in%nameseco
congrats <- ntpu_eco[pickcongrats]
str(congrats)
#congrats
picknames1 <- students10[["志願"]]=="北大經濟"
nameseco <- students10[["姓名"]][picknames1]
pickcongrats <- ntpu_eco%in%nameseco
congrats <- ntpu_eco[pickcongrats]
str(congrats)
students10[["志願"]]
#congrats
picknames1 <- students10[["志願"]]=="北大經濟"
nameseco <- students10[["姓名"]][picknames1]
pickcongrats <- ntpu_eco%in%nameseco
congrats <- ntpu_eco[pickcongrats]
str(congrats)
students10[["志願"]]
students10[["姓名"]]
#congrats
picknames1 <- students10[["志願"]]=="北大經濟"
nameseco <- students10[["姓名"]][picknames1]
pickcongrats <- ntpu_eco%in%nameseco
congrats <- ntpu_eco[pickcongrats]
#congrats
picknames1 <- students10[["志願"]]=="北大經濟"
nameseco <- students10[["姓名"]][picknames1]
pickcongrats <- ntpu_eco%in%nameseco
congrats <- ntpu_eco[pickcongrats]
str(congrats)
#congrats
picknames1 <- students10[["志願"]]=="北大經濟"
nameseco <- students10[["姓名"]][picknames1]
pickcongrats <- ntpu_eco%in%nameseco
congrats1 <- ntpu_eco[pickcongrats]
paste0(c("恭喜",congrats1,"同學錄取國立臺北大學經濟系"))
#congrats
picknames1 <- students10[["志願"]]=="北大經濟"
nameseco <- students10[["姓名"]][picknames1]
pickcongrats <- ntpu_eco%in%nameseco
congrats1 <- ntpu_eco[pickcongrats]
paste0(c("恭喜",congrats1[1],"同學錄取國立臺北大學經濟系"))
#congrats
knitr::opts_chunk$set(echo = TRUE)
paste0(
c("我叫"), c("小明","小美")
)
picknames1 <- students10[["志願"]]=="北大經濟"
nameseco <- students10[["姓名"]][picknames1]
pickcongrats <- ntpu_eco%in%nameseco
congrats1 <- ntpu_eco[pickcongrats]
paste0(c("恭喜",congrats1))
#congrats
picknames1 <- students10[["志願"]]=="北大經濟"
nameseco <- students10[["姓名"]][picknames1]
pickcongrats <- ntpu_eco%in%nameseco
congrats1 <- ntpu_eco[pickcongrats]
as.character(congrats1)
paste0(c("恭喜",congrats1))
#congrats
picknames1 <- students10[["志願"]]=="北大經濟"
nameseco <- students10[["姓名"]][picknames1]
pickcongrats <- ntpu_eco%in%nameseco
congrats1 <- ntpu_eco[pickcongrats]
paste0(c("恭喜"),c(congrats1),c(同學錄取國立臺北大學經濟系))
picknames1 <- students10[["志願"]]=="北大經濟"
nameseco <- students10[["姓名"]][picknames1]
pickcongrats <- ntpu_eco%in%nameseco
congrats1 <- ntpu_eco[pickcongrats]
paste0(c("恭喜"),c(congrats1),c("同學錄取國立臺北大學經濟系"))
#congrats
picknames1 <- students10[["志願"]]=="北大經濟"
nameseco <- students10[["姓名"]][picknames1]
pickcongrats <- ntpu_eco%in%nameseco
congrats1 <- ntpu_eco[pickcongrats]
paste0(c("恭喜"),c(congrats1),c("同學錄取國立臺北大學經濟系"))
#congrats
picknames1 <- students10[["志願"]]=="北大經濟"
nameseco <- students10[["姓名"]][picknames1]
pickcongrats <- ntpu_eco%in%nameseco
congrats1 <- ntpu_eco[pickcongrats]
congrats <- paste0(c("恭喜"),c(congrats1),c("同學錄取國立臺北大學經濟系"))
congrats
picknames1 <- students10[["志願"]]=="北大經濟"
nameseco <- students10[["姓名"]][picknames1]
str(nameseco)
#pickcongrats <- ntpu_eco%in%nameseco
#congrats1 <- ntpu_eco[pickcongrats]
#congrats <- paste0(c("恭喜"),c(congrats1),c("同學錄取國立臺北大學經濟系"))
congrats
students10[["姓名"]]
students10[["志願"]]
View(table)
read_csv("https://www.dropbox.com/s/xjzg1iuuws7tcha/table.csv?dl=1") -> table
source("https://www.dropbox.com/s/5oy56om4q0857tt/student10.R?dl=1",encoding = "UTF-8")
View(params)
View(students10)
picknames1 <- students10[["志願"]]=="北大經濟"
nameseco <- students10[["姓名"]][picknames1]
picknames2 <- nameseco%in%namelist
congrats
picknames1 <- students10[["志願"]]=="北大經濟"
nameseco <- students10[["姓名"]][picknames1]
picknames2 <- nameseco%in%namelist
congrats <- nameseco[picknames2]
congrats
law <- factor(badEmployers[['law']])
law <- factor(badEmployers[['law']])
fromJSON("https://data.ntpc.gov.tw/od/data/api/CB6C96C8-D514-42EA-8591-0F4447E79C91?$format=json") -> badEmployers
law <- factor(badEmployers[['law']])
violatedArticles <- levels(law)
violatedArticles
lawContent1 <- factor(badEmployers[['lawContent']])
violatedArticles1 <- levels(lawContent1)
table_countsByArticle2 <- table(lawContent1)
pick_mostViolatedArticle2 <- table_countsByArticle2==max(table_countsByArticle2)
mostViolatedcontent <- table_countsByArticle2[pick_mostViolatedArticle2]
mostViolatedArticle_content <- names(mostViolatedcontent)
mostViolatedArticle_content
View(badEmployers)
pick_dt <- badEmployers[['dt']]
str(pick_dt)
#popularSentenceMonth
pick_dt <- badEmployers[['dt']]
ymd_hms(pick_dt)
pick_dt <- badEmployers[['dt']]
ymd(pick_dt)
pickdate1 <- badEmployers[['dt']]
pickdate2 <- ymd(pick_dt)
table(month(pickdate))
pickdate1 <- badEmployers[['dt']]
pickdate2 <- ymd(pick_dt)
table(month(pickdate2))
#popularSentenceMonth
pickdate1 <- badEmployers[['dt']]
pickdate2 <- ymd(pick_dt)
datetable <- table(month(pickdate2))
popularSentenceMonth <- datetable==max(datetable)
#popularSentenceMonth
pickdate1 <- badEmployers[['dt']]
pickdate2 <- ymd(pick_dt)
datetable <- table(month(pickdate2))
popularSentenceMonth <- datetable==max(datetable)
str(popularSentenceMonth)
popularSentenceMonth
pickdate1 <- badEmployers[['dt']]
pickdate2 <- ymd(pick_dt)
datetable <- table(month(pickdate2))
popularSentenceMonth1 <- datetable==max(datetable)
popularSentenceMonth <- names(popularSentenceMonth1)
popularSentenceMonth
pickdate1 <- badEmployers[['dt']]
pickdate2 <- ymd(pick_dt)
datetable <- table(month(pickdate2))
popularSentenceMonth1 <- datetable==max(datetable)
popularSentenceMonth
pickdate1 <- badEmployers[['dt']]
pickdate2 <- ymd(pick_dt)
datetable <- table(month(pickdate2))
popularSentenceMonth1 <- datetable==max(datetable)
str(popularSentenceMonth1)
popularSentenceMonth
pickdate1 <- badEmployers[['dt']]
pickdate2 <- ymd(pick_dt)
datetable <- table(month(pickdate2))
popularSentenceMonth1 <- datetable==max(datetable)
str(popularSentenceMonth1)
#popularSentenceMonth
pickdate1 <- badEmployers[['dt']]
pickdate2 <- ymd(pick_dt)
datetable <- table(month(pickdate2))
pick_popularSentenceMonth <- datetable==max(datetable)
datetable[pick_popularSentenceMonth]
#popularSentenceMonth
pickdate1 <- badEmployers[['dt']]
pickdate2 <- ymd(pick_dt)
datetable <- table(month(pickdate2))
pick_popularSentenceMonth <- datetable==max(datetable)
popularSentenceMonth <- names(datetable[pick_popularSentenceMonth])
#popularSentenceMonth
pickdate1 <- badEmployers[['dt']]
pickdate2 <- ymd(pick_dt)
datetable <- table(month(pickdate2))
pick_popularSentenceMonth <- datetable==max(datetable)
popularSentenceMonth <- names(datetable[pick_popularSentenceMonth])
str(popularSentenceMonth)
#popularSentenceMonth
pickdate1 <- badEmployers[['dt']]
pickdate2 <- ymd(pick_dt)
datetable <- table(month(pickdate2))
pick_popularSentenceMonth <- datetable==max(datetable)
popularSentenceMonth <- names(datetable[pick_popularSentenceMonth])
popularSentenceMonth
knitr::opts_chunk$set(echo = TRUE)
addresses <- c(
'臺中市后里區公館里尾社路385號',
'新竹市東區科學園路125號1樓',
'新竹市北區竹光路99號',
'金門縣金城鎮賢庵里山前33號',
'臺中市南屯區工業區二十四路23號1樓')
addresses <- c(
'臺中市后里區公館里尾社路385號',
'新竹市東區科學園路125號1樓',
'新竹市北區竹光路99號',
'金門縣金城鎮賢庵里山前33號',
'臺中市南屯區工業區二十四路23號1樓')
myRegexSlotMachine <- "[0-9]+號"
print(myRegexSlotMachine)
str_view_all(addresses,myRegexSlotMachine)
addresses <- c(
'臺中市后里區公館里尾社路385號',
'新竹市東區科學園路125號1樓',
'新竹市北區竹光路99號',
'金門縣金城鎮賢庵里山前33號',
'臺中市南屯區工業區二十四路23號1樓')
myRegexSlotMachine <- "[0-9]+號"
print(myRegexSlotMachine)
str_view_all(addresses,myRegexSlotMachine)
library(stringr)
library(glue)
addresses <- c(
'臺中市后里區公館里尾社路385號',
'新竹市東區科學園路125號1樓',
'新竹市北區竹光路99號',
'金門縣金城鎮賢庵里山前33號',
'臺中市南屯區工業區二十四路23號1樓')
myRegexSlotMachine <- "[0-9]+號"
print(myRegexSlotMachine)
str_view_all(addresses,myRegexSlotMachine)
str_extract(addresses,myRegexSlotMachine)
str_view_all(addresses,"[0-9]+") # 樓號也會選到
phrase <- c("唧唧复唧唧")
phrase <- c("唧唧复唧唧")
# 目標是前面的唧唧
target_regex <- "唧唧"
#這樣就已經把target_regex命名唧唧了
pattern <- glue::glue("^{target_regex}")
print(pattern)
str_view(phrase, pattern)
phrase <- c("唧唧复唧唧")
# 目標是前面的唧唧
target_regex <- "唧唧"
#這樣就已經把target_regex命名唧唧了
pattern <- glue::glue("^{target_regex}")
print(pattern)
str_view(phrase, pattern)
# 目標是後面的唧唧
target_regex2 <- "唧唧"
pattern <- glue::glue("{target_regex2}$")
print(pattern)
str_view(phrase, pattern)
twDate <-  c("民國108年12月5日","民國98年10月5日")
library(stringr)
# 準備regex:
## 取出：「前有」民國，「後有」年的「數字」「們」
## "(?<={A_regex}){target_regex}(?={B_regex})"
target_regex <- "[0-9]+"#也可以用{2,3}2到3位數
A_regex <- "民國"
B_regex <- "年"
regex_pattern <- glue::glue(
"(?<={A_regex}){target_regex}(?={B_regex})"
)
print(regex_pattern)
## 如果同學已經很熟就可以直接寫
regex_pattern <-
"(?<=民國)[0-9]+(?=年)"
# 取出民國年，計算西元年
year <-
str_extract(
twDate,
regex_pattern)
westernYear <- as.integer(year)+1911
## 如果同學已經很熟就可以直接寫
regex_pattern <-
"(?<=民國)[0-9]+(?=年)"
# 取出民國年，計算西元年
year <-
str_extract(
twDate,
regex_pattern)
westernYear <- as.integer(year)+1911
# 替換民國xx年的xx成西元年數字
str_replace(
twDate,
regex_pattern,  # 要換掉的文字
as.character(westernYear) # 要替換的內容
) -> twDate_reformat
print(twDate_reformat)
lubridate::ymd(twDate_reformat)
str_extract(addresses,"[0-9]+(?=號)")
str_extract(addresses,"[0-9]+(?=號)")
str_extract_all(
"我的名字8293叫17380小abce明",
"[\u4E00-\u9FFF]+")
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr);
back_regex <- "(?!弟)"
back_regex
pattern <- paste0("段(兄|兄弟)",back_regex)
str_extract_all(twoNames, pattern)
twoNames <- "有人叫他段兄，但也有有人叫他段兄弟，最常...."
str_extract_all(twoNames, "段(兄|兄弟)")
pattern <- paste0("段(兄|兄弟)",back_regex)
back_regex <- "(?!弟)"
back_regex
pattern <- paste0("段(兄|兄弟)",back_regex)
str_extract_all(twoNames, pattern)
context_picked_split <- str_split(context_picked,"\\s\\s")
textExample <- c("段1......。　　段2....。")
context_picked_split <- str_split(context_picked,"\\s\\s")
textExample <- c("段1......。　　段2....。")
jsonlite::fromJSON("https://www.dropbox.com/s/kv0xa0spa6q5l7q/semiGodsSemiDevils.json?dl=1") -> semiGodsSemiDevils
picked1 <- semiGodsSemiDevils[['data']][[1]][['section']]=="P2"
context_picked <- semiGodsSemiDevils[['data']][[1]][['text']][picked1]
context_picked
textExample <- c("段1......。　　段2....。")
context_picked_split <- str_split(context_picked,"\\s\\s")
context_picked_split
context_picked_split <- str_split(context_picked,"\\s\\s")
#context_picked_split
context_picked_split <- str_split(context_picked,"\\s\\s")
#context_picked_split
context_picked_split <- str_split(context_picked,"\\s\\s")
context_picked_split
mention_duan <- str_extract_all(context_picked_split[[1]],"段譽|段兄|段兄弟|段大哥|段相公|段君|姓段的小子")
mention_duan
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr);
mention_duan <- str_extract_all(context_picked_split[[1]],"段(譽|兄弟|兄|大哥|相公|君)|姓段的小子")
jsonlite::fromJSON("https://www.dropbox.com/s/kv0xa0spa6q5l7q/semiGodsSemiDevils.json?dl=1") -> semiGodsSemiDevils
picked1 <- semiGodsSemiDevils[['data']][[1]][['section']]=="P2"
context_picked <- semiGodsSemiDevils[['data']][[1]][['text']][picked1]
context_picked
textExample <- c("段1......。　　段2....。")
textExample <- c("段1......。　　段2....。")
context_picked_split <- str_split(context_picked,"\\s\\s")
context_picked_split
mention_duan <- str_extract_all(context_picked_split[[1]],"段(譽|兄弟|兄|大哥|相公|君)|姓段的小子")
mention_duan
table_duan <- table(unlist(mention_duan))
table_duan
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr);
#6-8
pick_age1 <- studentHeights[['年齡層']]=="6-8"
knitr::opts_chunk$set(echo = TRUE)
library(magrittr)
example <- list(
name=c("小明","小花","小新","美美"),
height=c(175,166,170,160),
weight=c(77,NA,60,43),
birthday=lubridate::ymd(c("1998-03-11","1999-12-22","1995-08-22","2001-10-10")),
hobby=c("美食 旅遊","旅遊 時尚","3C 美食","音樂 旅遊"),
residence=c("Taipei","New Taipei","Taichung","Kaohsiung"),
allowance=factor(c("0-1000","1001-2000","2000+","1001-2000")),
bloodType=c("A","B","B","O")
)
sort(threeHeigths, decreasing=T) %>%
names(.) %>%
.[[1]] -> highestPerson
# 由cities創出每個元素對應的北部、東部、中部region factor
cities <- factor(c("台北","花蓮","台東","台中"))
levels(cities)
region <- cities
# 以下為一連串的pipe operation
levels(region) -> currentLevels
str_replace(currentLevels,"台北","北部") -> currentLevels1
region <- cities
library(stringr)
# 以下為一連串的pipe operation
levels(region) -> currentLevels
str_replace(currentLevels,"台北","北部") -> currentLevels1
str_replace(currentLevels1,"花蓮|台東","東部") -> currentLevels2
str_replace(currentLevels2,"台中","中部") -> regionLevels
regionLevels -> levels(region)
region <- cities
library(stringr)
# 以下為一連串的pipe operation
levels(region) -> currentLevels
str_replace(currentLevels,"台北","北部") -> currentLevels1
str_replace(currentLevels1,"花蓮|台東","東部") -> currentLevels2
str_replace(currentLevels2,"台中","中部") -> regionLevels
regionLevels -> levels(region)
regionLevels
region <- cities
library(stringr)
# 以下為一連串的pipe operation
levels(region) -> %>%
region <- cities
library(stringr)
# 以下為一連串的pipe operation
levels(region) -> %>%
region <- cities
library(stringr)
# 以下為一連串的pipe operation
levels(region) <- %>%
region <- cities
library(stringr)
# 以下為一連串的pipe operation
levels(region)%>%
str_replace(.,"台北","北部") %>%
str_replace(.,"花蓮|台東","東部")%>%
str_replace(.,"台中","中部") -> levels(region)
regionLevels
num <- c(2,97,22,15,7)
# 選出大於50的數字
(num > 50)%>%
num[.]
#若代表中間物件的.在函數的「第一位」則.*可省略不寫，
#連它後面的,也去掉。小心若不在第一位則不可做省略.動作。
levels(region) %>%
str_replace("台北","北部") %>%
str_replace("花蓮|台東","東部") %>%
str_replace("台中","中部") ->
levels(region)
dataList <- list(
num=c(2,97,22,15,7),
chr=c("2","97","22","15","7")
)
population %>%
names(sort(.)) %>%
factor(cities, levels=.) -> cities
dataList <- list(
num=c(2,97,22,15,7),
chr=c("2","97","22","15","7")
)
population %>%
names{(sort(.))} %>%
dataList <- list(
num=c(2,97,22,15,7),
chr=c("2","97","22","15","7")
)
population %>%
{names(sort(.))} %>%
factor(cities, levels=.) -> cities
map(dataList, is.numeric) -> results
library(purrr)
dataList <- list(
num=c(2,97,22,15,7),
chr=c("2","97","22","15","7")
)
population %>%
{names(sort(.))} %>%
factor(cities, levels=.) -> cities
map(dataList, is.numeric) -> results
unlist(results) -> pick_numeric
dataList[pick_numeric] -> num_element
(num_element[[1]] > 50) -> pick_big
num_element[[1]][pick_big] -> bigNumber
map(dataList, is.numeric)%>%
unlist(.)%>%
dataList[.]%>%
(.[[1]] > 50)%>%
num_element[[1]][.] -> bigNumber
map(dataList, is.numeric)%>%
unlist(.)%>%
dataList[.]%>%
(.[[1]] > 50)%>%
{num_element[[1]][.]} -> bigNumber
map(dataList, is.numeric)%>%
unlist(.)%>%
dataList[.]%>%
(.[[1]] > 50)%>%
{num_element[[1]][.]} -> bigNumber
map(dataList, is.numeric)%>%
unlist(.)%>%
dataList[.]%>%
{(.[[1]] > 50)}%>%
{num_element[[1]][.]} -> bigNumber
map(dataList, is.numeric)%>%
unlist(.)%>%
dataList[.]%>%
{(.[[1]] > 50)}%>%
{num_element[[1]][.]} -> bigNumber
bigNumber
map(dataList, is.numeric)%>%
unlist(.)%>%
dataList[.]%>%
{(.[[1]] > 50)}%>%
{.[[1]][.]} -> bigNumber
bigNumber
